@import '../../../styles/customMediaQueries.css';

.root {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.searchResultSummary {
  composes: h3 from global;
  margin-top: 6px;
  display: flex;
  justify-content: space-between;
  background-color: var(--colorGrey50);

  @media (--viewportMedium) {
    margin-top: 8px;
  }
}

.buttons {
  display: flex;
}

.mapIcon {
  /* Font */
  composes: marketplaceTinyFontStyles from global;
  font-weight: var(--fontWeightMedium);

  /* background map image */
  background-image: url(./images/map_icon216x105.png);
  background-size: cover;

  border-radius: 3px;
  width: 72px;
  height: 35px;
  padding: 9px 22px;
  margin: 0;
}

.modalContainer {
  width: 100%;
  padding: 0;
  margin: 0;
  height: 100vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.modalHeadingWrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  display: flex;
  align-items: center;
  justify-content: left;
  padding: 0 16px;
  height: 60px;
  background: var(--colorWhite);
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
  z-index: 11;
}

.SearchFiltersMobile_backButton__Gi3wr,
button.SearchFiltersMobile_backButton__Gi3wr,
.backButton {
  /* Keep original positioning */
  position: absolute;
  left: 16px;
  top: 50%;
  transform: translateY(-50%);
  
  /* Make it visible */
  display: flex !important;
  visibility: visible !important;
  opacity: 1 !important;
  z-index: 1000 !important;
  
  /* Style consistently */
  align-items: center;
  justify-content: center;
  background: white !important;
  border: 2px solid var(--marketplaceColor) !important;
  border-radius: 6px !important;
  padding: 8px 12px !important;
  cursor: pointer;
  
  /* Text styling */
  color: var(--colorBlack) !important;
  font-size: 14px !important;
}

.backButton svg {
  width: 18px;
  height: 18px;
  stroke-width: 2px;
}

.logoContainer {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.logoImage {
  width: 180px;
  height: auto;
  object-fit: contain;
}

.resetAllButton {
  font-size: 16px;
  font-weight: var(--fontWeightMedium);
  color: var(--colorGrey800);

  /* Layout */
  display: inline;
  float: right;
  margin: 0 0 5px 0;
  padding: 0;

  /* Override button styles */
  outline: none;
  text-align: left;
  border: none;

  &:focus,
  &:hover {
    color: var(--colorGrey700);
  }
}

.filtersWrapper {
  /* Add top padding to account for fixed header and bottom padding for fixed footer */
  padding-top: 80px; /* Height of header plus some breathing room */
  padding-bottom: 80px; /* Height of footer plus some breathing room */
  padding-left: 20px;
  padding-right: 20px;
  overflow-y: auto;
  height: 100vh;
  flex: 1;
  background-color: white;
}

/* Custom class for the Dates filter to match SingleDatePicker UI */
:global(.datesFilterHeader) {
  /* Better container for the filter */
  margin-bottom: 20px;
  margin-top: 8px;
  
  /* Add border around the entire filter header */
  border: 1px solid var(--colorGrey200);
  border-radius: 10px;
  padding: 14px 14px 10px;
  cursor: pointer;
  transition: all 0.25s ease;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.03);
}

:global(.datesFilterHeader):hover {
  border-color: var(--colorGrey300);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.04);
}

/* Make date filter clickable */
:global(.datesFilterHeader) :global(.FilterPlain_filterHeader),
:global(.datesFilterHeader) :global(.FilterPlain_labelButton),
:global(.datesFilterHeader) :global(.FilterPlain_labelWrapper) {
  cursor: pointer;
}

/* Make date filter clickable */
:global(.datesFilterHeader) :global(.FilterPlain_filterHeader),
:global(.datesFilterHeader) :global(.FilterPlain_labelButton),
:global(.datesFilterHeader) :global(.FilterPlain_labelWrapper) {
  cursor: pointer;
}

/* Create a separate label container */
:global(.datesFilterHeader) :global(.FilterPlain_filterHeader) {
  /* Restructure display to show label above the input */
  display: flex;
  flex-direction: column;
  border: none !important;
  padding: 0 !important;
  margin-bottom: 8px;
}

/* Force filter closed */
.force-closed [class*="FilterPlain_plain"] {
  display: none !important;
}

/* Ensure date filter stays closed on mobile devices */
@media (max-width: 767px) {
  :global(.datesFilterHeader.force-closed) [class*="FilterPlain_plain"] {
    display: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
    height: 0 !important;
    overflow: hidden !important;
    pointer-events: none !important;
  }
}

/* Style for the wrapper of the date input */
:global(.datesFilterHeader) :global(.FilterPlain_labelWrapper) {
  position: relative;
  /* Create calendar input styling */
  border: 1px solid var(--colorGrey300);
  border-radius: 6px;
  background: white;
  padding: 0;
  margin-top: 8px;
  width: 100%;
}

/* Style for the date input field */
:global(.datesFilterHeader) :global(.FilterPlain_labelButton) {
  /* Match SingleDatePicker style */
  padding: 12px 12px 12px 32px;
  position: relative;
  height: 44px;
  line-height: 20px;
  width: 100%;
  border-radius: inherit;
  margin: 0;
  display: flex;
  align-items: center;
  cursor: pointer;
}

/* Add a visible calendar icon */
:global(.datesFilterHeader) :global(.FilterPlain_labelButton)::before {
  content: "";
  position: absolute;
  left: 8px;
  top: 50%;
  transform: translateY(-50%);
  width: 16px;
  height: 16px;
  background-image: url('data:image/svg+xml;utf8,<svg width="16" height="16" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd"><g stroke="%23000000" transform="translate(1 1)"><rect stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" x=".292" y="1.459" width="13.417" height="12.25" rx="1"/><path d="M3.208.292V3.21M10.792.292V3.21M.292 4.376h13.416" stroke-linecap="round" stroke-linejoin="round"/><rect x="3.5" y="6.5" width="1" height="1" rx=".5"/><rect x="6.5" y="6.5" width="1" height="1" rx=".5"/><rect x="9.5" y="6.5" width="1" height="1" rx=".5"/><rect x="3.5" y="9.5" width="1" height="1" rx=".5"/><rect x="6.5" y="9.5" width="1" height="1" rx=".5"/><rect x="9.5" y="9.5" width="1" height="1" rx=".5"/></g></g></svg>');
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  z-index: 2;
}

/* Style the label to appear above the input */
:global(.datesFilterHeader) :global(.FilterPlain_label) {
  position: relative;
  font-size: 14px;
  font-weight: 600;
  color: var(--colorGrey700);
  margin: 0;
  padding: 0;
  display: block;
}

/* Style the date value inside the input */
:global(.datesFilterHeader) :global(.FilterPlain_labelSelected) {
  margin: 0;
  padding: 0;
  color: var(--marketplaceColor);
  font-weight: 500;
}

/* Ensure placeholder text is gray, but turn black when selected */
:global(.datesFilterHeader) :global(.FilterPlain_labelButtonContent) {
  color: var(--colorGrey500);
}

/* When date is selected, style the content differently */
:global(.datesFilterHeader.isSelected) :global(.FilterPlain_labelButtonContent) {
  color: var(--colorGrey900);
}

/* When date is selected, change the border color */
:global(.datesFilterHeader.isSelected) {
  border: 1px solid var(--colorGrey300);
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
}

/* Hide the expand/collapse indicator */
:global(.datesFilterHeader) :global(.FilterPlain_openSign) {
  display: none;
}

/* Modified container with consistent padding */
/* Modified container with consistent padding */
/* Modified container with consistent padding */
.showListingsContainer {
  position: fixed;
  bottom: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100vw;
  padding: 12px 16px;
  background: var(--colorWhite);
  box-shadow: 0 -2px 4px 0 rgba(0, 0, 0, 0.1);
  z-index: 11;
  gap: 12px; /* Consistent spacing between elements */
}

/* Show Listings Button (Takes ~75%) */
.buttonWrapper {
  flex: 3; /* Takes 3 parts of available space */
}

.showListingsButton {
  width: 100%;
  min-height: 44px;
  background-color: var(--colorWhite);
  color: var(--colorBlack);
  border: 2px solid var(--marketplaceColor);
  font-size: 14px;
  line-height: 120%;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 6px;
  transition: none; /* Remove hover effect */
}

/* Sort By Dropdown (Takes more space) */
.sortByWrapper {
  flex: 2; /* Increased to 2 to make it wider */
  height: 44px; /* Match button height */
}

.sortByWrapper :global(.select) {
  width: 100%;
  margin: 0;
  height: 100%;
}

.sortByWrapper :global(.select__control) {
  min-height: 44px;
  height: 100%;
  border: 2px solid var(--marketplaceColor);
  border-radius: 6px;
  box-shadow: none;
  width: 100%; /* Ensure full width */
}

.sortByWrapper :global(.SortByPlain_root__1D6Md),
.sortByWrapper :global(.SortByPopup_root) {
  width: 100%;
}

/* Remove hover effects */
.sortByWrapper :global(.select__control:hover),
.sortByWrapper :global(.select__control--is-focused) {
  border-color: var(--marketplaceColor);
  box-shadow: none;
}

/* Make sortby dropdown open upward in the footer */
.showListingsContainer .sortByWrapper :global(.SortByPopup_menuContent) {
  position: absolute !important;
  bottom: 65px !important;
  top: auto !important;
  margin-bottom: 0 !important;
  margin-top: 0 !important;
  box-shadow: none !important; /* Remove shadow completely */
  border: 1px solid var(--colorGrey200) !important; /* Add subtle grey border */
  border-radius: 6px !important; /* Add some border radius */
}

/* Fix position for the mobile dropdown in bottom toolbar */
.showListingsContainer .sortByWrapper :global(div[id^="Menu-menuContent"]) {
  position: fixed !important;
  bottom: 80px !important;
  top: auto !important;
  max-height: 60vh !important;
  overflow-y: auto !important;
  z-index: 1000 !important; /* Ensure it's above other elements */
  box-shadow: none !important; /* Remove shadow completely */
  border: 1px solid var(--colorGrey200) !important; /* Add subtle grey border */
  border-radius: 6px !important; /* Add some border radius */
  background-color: white !important; /* Ensure background is white */
}


.closeBtn {
  border: solid 2px var(--colorGrey800);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 100px;
  width: 46px;
  height: 46px;
  min-height: 46px;
  min-width: 46px;
  cursor: pointer;
  transition: var(--transitionStlye);
  &:hover {
    transition: var(--transitionStlye);
    border-color: var(--marketplaceColor);
    & > svg {
      & path {
        fill: var(--marketplaceColor);
      }
    }
  }
  & > svg {
    width: 24px;
    height: 24px;
  }
}

/* Modified to display in mobile while keeping original functionality */
.dateSection {
  /* These two properties handle mobile visibility */
  display: block !important; /* Keep it visible always */
  visibility: visible !important; /* Ensure visibility */
  
  align-items: stretch;
  justify-content: space-between;
  gap: 44px;
  width: 100%;
  max-width: 100%;
  
  /* Keep it hidden in the topbar flow, but allow it to work in modal */
  position: absolute;
  left: -9999px;
  top: -9999px;
  
  /* But show it in larger screens as normal */
  @media (--viewportLarge) {
    position: static;
    max-width: 40%;
    margin-top: 0px;
  }
}

.moreFilters {
  border: solid 1px #000;
  border-radius: 10px;
  display: flex;
  align-items: center;
  font-size: 12px;
  line-height: 100%;
  padding: 4px 12px;
  height: 50px;
  color: var(--colorGrey900);
  cursor: pointer;
  transition: all ease 0.5s;
  position: relative;
  width: 46%;
  background: white;
  @media (min-width: 480px) {
    font-size: 14px;
  }

  &:hover {
    transition: all ease 0.5s;
    color: var(--colorGrey900);
    border-color: var(--colorGrey100);
    box-shadow: var(--boxShadowButton);

    & > svg {
      transition: all ease 0.5s;

      & > path {
        transition: all ease 0.5s;
        stroke: var(--colorGrey900);
      }
    }
  }
  & > div {
    position: absolute;
    left: 0;
    right: 0;
    width: 100%;
  }

  & .count {
    width: 60px;
    height: 20px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: 100px;
    font-size: 13px;
    color: var(--colorWhite);
    font-weight: var(--fontWeightRegular);
    position: absolute;
    top: -6px;
    right: -6px;
    background-color: var(--marketplaceColor);
  }

  & > svg {
    transition: all ease 0.5s;
    margin-right: 5px;
    height: 18px;
    width: 18px;

    & > path {
      transition: all ease 0.5s;
      stroke: var(--colorGrey900);
    }
  }
}

/* Fix DateRangePicker visibility in modal */
@media (max-width: 767px) {
  :global(.DateInput_input__focused) {
    display: initial !important;
    width: auto !important;
    border: 1px solid #dbdbdb !important;
  }

  :global(.DateRangePickerInput__withBorder) {
    background: white !important;
    width: auto !important;
    border: 1px solid #dbdbdb !important;
  }

  :global(.DateRangePickerInput_arrow_svg) {
    background: transparent !important;
    width: auto !important;
    border: none !important;
  }
}

.extraFilters {
  background: white;
  border-radius: 10px;
  border: 1px solid black;
  max-height: 60px;
  padding: 0px 12px;
  width: calc(100% / 6);
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  & img {
    width: 20px;
    @media (min-width: 480px) {
      width: 30px;
    }
  }

  & div {
    font-size: 10px;
    line-height: 12px;
    text-align: center;
    width: max-content;
    @media (min-width: 480px) {
      font-size: 11px;
    }
  }
}

.peopleIcon {
  & > img {
    position: relative;
  }
}

#filtersContainer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: auto;
  z-index: 5; /* Keep it behind the Topbar */
  transform: translateY(-100%); /* Start hidden above the viewport */
  transition: transform 0.3s ease-in-out;
}

#filtersContainer.open {
  transform: translateY(0); /* Slide it down when active */
}

.startTimeFilter {
  margin-top: 16px;
  padding: 10px;
  background: white;
  border-radius: 5px;
}

/* Container for the time filter that gets inserted after the date filter */
.timeFilterContainer {
  padding: 10px 0;
  margin-top: -10px;
  margin-bottom: 20px;
  width: 100%;
}

/* Placeholder for the time filter in the original location */
.timeFilterPlaceholder {
  display: none;
}

/* Hide datepickers and time filters on mobile */
.hiddenSection {
  display: none;
}

/* Time picker wrapper in modal */
.timePickerWrapper {
  margin-top: 20px;
  margin-bottom: 20px;
  width: 100%;
  border-top: 1px solid var(--colorGrey100);
  padding-top: 20px;
}

.timePickerTitle {
  font-size: 16px;
  font-weight: 600;
  color: var(--colorGrey700);
  margin-bottom: 16px;
}

/* Simple standalone time filter styling - all margins handled by component */
.standaloneTimeFilter {
  /* No additional styling needed as TimeFilterForm now has its own margins */
}

/* Date Picker Modal - overlay that appears when date button is clicked */
.datePickerModal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 16px;
}

.datePickerModalContent {
  background-color: white;
  border-radius: 8px;
  width: 100%;
  max-width: 480px;
  max-height: 80vh;
  overflow-y: auto;
  padding: 24px;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
}

.datePickerModalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

.datePickerModalTitle {
  font-size: 18px;
  font-weight: 600;
  color: var(--colorGrey900);
}

.datePickerWrapper {
  width: 100%;
}

.actionButtons {
  display: flex;
  justify-content: space-between;
  margin-top: 24px;
}

.clearButton {
  padding: 8px 16px;
  background: transparent;
  border: 1px solid var(--colorGrey400);
  border-radius: 6px;
  color: var(--colorGrey800);
  cursor: pointer;
}

.cancelButton {
  padding: 8px 16px;
  background-color: var(--marketplaceColor);
  border: none;
  border-radius: 6px;
  color: white;
  cursor: pointer;
}

/* Date filter button container - always visible on homepage */
.dateFilterButtonContainer {
  width: 100%;
  padding: 16px;
  display: flex;
  justify-content: center;
  position: relative;
  z-index: 10;
}

/* Choose a Date Button */
.chooseADateButton {
  width: 100%;
  max-width: 400px;
  height: 52px;
  background-color: white;
  border: 2px solid var(--marketplaceColor);
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  font-size: 16px;
  font-weight: 500;
  color: #333;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  padding: 0 20px;
  position: relative;
}

.chooseADateButton:hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
  transform: translateY(-1px);
}

.calendarIcon {
  display: inline-block;
  width: 20px;
  height: 20px;
  margin-right: 10px;
  background-image: url('data:image/svg+xml;utf8,<svg width="16" height="16" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd"><g stroke="%23000000" transform="translate(1 1)"><rect stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" x=".292" y="1.459" width="13.417" height="12.25" rx="1"/><path d="M3.208.292V3.21M10.792.292V3.21M.292 4.376h13.416" stroke-linecap="round" stroke-linejoin="round"/><rect x="3.5" y="6.5" width="1" height="1" rx=".5"/><rect x="6.5" y="6.5" width="1" height="1" rx=".5"/><rect x="9.5" y="6.5" width="1" height="1" rx=".5"/><rect x="3.5" y="9.5" width="1" height="1" rx=".5"/><rect x="6.5" y="9.5" width="1" height="1" rx=".5"/><rect x="9.5" y="9.5" width="1" height="1" rx=".5"/></g></g></svg>');
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}

.buttonText {
  display: inline-block;
  text-align: center;
}

